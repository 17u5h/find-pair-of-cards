{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;ACAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,+DAAkB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACA;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;;;;;;;;;;;;;;;;AC9EO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mCAAmC;AACvD;AACA;AACA;AACA;AACA,sBAAsB;;;;;;;;;;;;;;;;;;ACpC4B;AACE;AACP;AAC9B;AACf,kBAAkB,sDAAa;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,+DAAc;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,8DAAiB;AACzB,KAAK;AACL;;;;;;;;;;;;;;;;;;;AC7DkD;AACE;AACiB;AACT;AAC7C;AACf;AACA;AACA;AACA,eAAe,8DAAU,CAAC,oEAAoB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,IAAI,oEAAoB,EAAE;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,6BAA6B,+DAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,8DAAiB;AACzB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,sDAAa;AACvC,YAAY,uDAAU;AACtB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,mDAAU;AACpD;;;;;;;;;;;;;;;;;;ACvGkD;AACA;AACsB;AACzD;AACf,gCAAgC,+DAAc;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,2BAA2B;AAChE,yBAAyB;AACzB;AACA;AACA;AACA;AACA,qCAAqC,6BAA6B;AAClE,yBAAyB;AACzB;AACA;AACA;AACA;AACA,qCAAqC,2BAA2B;AAChE,yBAAyB;AACzB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uCAAuC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,sEAAsB;AACvD,YAAY,oEAAoB;AAChC,gBAAgB,sEAAsB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,yDAAgB;AAC1D;;;;;;;;;;;;;;;AC9Ee;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;;;;;;UC3CA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;ACNqB;AAC+B;AACpD;AACA,IAAI,8DAAiB;AACrB,CAAC","sources":["webpack://find-pair-of-cards/./src/style.css?e320","webpack://find-pair-of-cards/./src/gameEngine.ts","webpack://find-pair-of-cards/./src/initSetAndSupport.ts","webpack://find-pair-of-cards/./src/renderFinishScreen.ts","webpack://find-pair-of-cards/./src/renderPlayScreen.ts","webpack://find-pair-of-cards/./src/renderStartScreen.ts","webpack://find-pair-of-cards/./src/lib/templateEngine.js","webpack://find-pair-of-cards/webpack/bootstrap","webpack://find-pair-of-cards/webpack/runtime/define property getters","webpack://find-pair-of-cards/webpack/runtime/hasOwnProperty shorthand","webpack://find-pair-of-cards/webpack/runtime/make namespace object","webpack://find-pair-of-cards/./src/index.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","import renderFinishScreen from './renderFinishScreen';\r\nvar firstClickedCardElement;\r\nvar secondClickedCardElement;\r\nvar firstCardFlag = false;\r\nvar secondCardFlag = false;\r\nvar firstClickedCard = [];\r\nvar countToWin = 0;\r\nexport function gameEngine(event) {\r\n    var target = event.target;\r\n    var cards = document.querySelectorAll('.play-field__card');\r\n    if (target === null)\r\n        throw new Error('нет игрового поля, по которому нужно кликать');\r\n    if (target.classList.contains('play-field'))\r\n        return;\r\n    if (target.classList.contains('prevent-click'))\r\n        return;\r\n    if (firstClickedCard.length !== 0) {\r\n        var secondSuit = target.dataset.suit;\r\n        var secondRank = target.dataset.rank;\r\n        target.classList.add(\"play-field__card_flipped-\".concat(secondSuit, \"-\").concat(secondRank));\r\n        firstClickedCardElement.classList.remove('prevent-click');\r\n        secondCardFlag = true;\r\n        if (firstClickedCard[0] === secondSuit &&\r\n            firstClickedCard[1] === secondRank) {\r\n            if (secondClickedCardElement === null)\r\n                throw new Error('не удалось взять повторно уже открытую карту');\r\n            secondClickedCardElement = document.querySelector(\".play-field__card_flipped-\".concat(firstClickedCardElement.dataset.suit, \"-\").concat(firstClickedCardElement.dataset.rank));\r\n            firstClickedCardElement.classList.add('prevent-click');\r\n            secondClickedCardElement.classList.add('prevent-click');\r\n            firstClickedCard.splice(0);\r\n            firstCardFlag = false;\r\n            secondCardFlag = false;\r\n            countToWin += 2;\r\n            if (countToWin === cards.length)\r\n                renderFinishScreen();\r\n        }\r\n        else {\r\n            firstClickedCard.splice(0);\r\n            secondClickedCardElement = target;\r\n        }\r\n    }\r\n    else {\r\n        if (secondCardFlag) {\r\n            secondClickedCardElement.classList.remove(\"play-field__card_flipped-\".concat(secondClickedCardElement.dataset.suit, \"-\").concat(secondClickedCardElement.dataset.rank));\r\n        }\r\n        if (firstCardFlag) {\r\n            firstClickedCardElement.classList.remove(\"play-field__card_flipped-\".concat(firstClickedCardElement.dataset.suit, \"-\").concat(firstClickedCardElement.dataset.rank));\r\n        }\r\n        var firstSuit = target.dataset.suit;\r\n        var firstRank = target.dataset.rank;\r\n        if (firstSuit === undefined || firstRank === undefined)\r\n            throw new Error('не получилось получить данные первой кликнутой карты');\r\n        firstClickedCard.push(firstSuit, firstRank);\r\n        target.classList.add(\"play-field__card_flipped-\".concat(firstSuit, \"-\").concat(firstRank));\r\n        target.classList.add('prevent-click');\r\n        firstClickedCardElement = target;\r\n        firstCardFlag = true;\r\n    }\r\n}\r\nexport var timerInterval;\r\nexport function startTimer(timerField) {\r\n    var seconds = 0;\r\n    var minutes = 0;\r\n    timerInterval = setInterval(function () {\r\n        if (seconds > 59) {\r\n            minutes++;\r\n            seconds = 0;\r\n            timerField.textContent = minutes.toString() + '.' + seconds.toString();\r\n        }\r\n        if (seconds >= 10) {\r\n            timerField.textContent = minutes.toString() + '.' + seconds.toString();\r\n            seconds++;\r\n        }\r\n        if (seconds < 10) {\r\n            timerField.textContent = minutes.toString() + '.0' + seconds.toString();\r\n            seconds++;\r\n        }\r\n    }, 1000);\r\n}\r\n","export var cardsCountByDifficulty = {\r\n    easy: 12,\r\n    normal: 16,\r\n    hard: 24,\r\n};\r\nexport var deckProps = {\r\n    difficulty: cardsCountByDifficulty.easy,\r\n};\r\nvar suitCount = 4;\r\nvar equalCardsCount = 2;\r\nvar maxRank = 14;\r\nvar minRank = 6;\r\nexport function createDeck(difficulty) {\r\n    if (difficulty % 2 !== 0) {\r\n        throw new Error('Сгенерированно нечетное количество карт. Невозможно начать игру');\r\n    }\r\n    var deck = [];\r\n    var _loop_1 = function (i) {\r\n        var randomizeCard = function () {\r\n            var rank = Math.ceil(Math.random() * (maxRank - minRank) + minRank).toString();\r\n            var suit = Math.ceil(Math.random() * suitCount).toString();\r\n            var randomCard = [suit, rank];\r\n            if (deck.toString().includes(randomCard.toString())) {\r\n                randomizeCard();\r\n            }\r\n            else {\r\n                deck.push(randomCard, randomCard);\r\n            }\r\n        };\r\n        randomizeCard();\r\n    };\r\n    for (var i = 1; i <= difficulty / equalCardsCount; i++) {\r\n        _loop_1(i);\r\n    }\r\n    return deck;\r\n}\r\n// module.exports = { createDeck }\r\n","import templateEngine from './lib/templateEngine';\r\nimport renderStartScreen from './renderStartScreen';\r\nimport { timerInterval } from './gameEngine';\r\nexport default function renderFinishScreen() {\r\n    clearInterval(timerInterval);\r\n    var playedTimeElement = document.querySelector('.header__timer');\r\n    if (playedTimeElement === null)\r\n        throw new Error('что то произошло с таймером. там пусто');\r\n    var playedTime = playedTimeElement.textContent;\r\n    var container = document.querySelector('.container');\r\n    if (container === null)\r\n        throw new Error('куда-то пропал .container');\r\n    container.classList.add('container_blur');\r\n    var templateFinishScreen = templateEngine({\r\n        tag: 'div',\r\n        cls: 'finish-screen',\r\n        content: {\r\n            tag: 'div',\r\n            cls: 'finish-screen__block',\r\n            content: [\r\n                {\r\n                    tag: 'div',\r\n                    cls: 'finish-screen__logo',\r\n                },\r\n                {\r\n                    tag: 'div',\r\n                    cls: 'finish-screen__sign',\r\n                    content: 'Вы выиграли!',\r\n                },\r\n                {\r\n                    tag: 'div',\r\n                    cls: 'finish-screen__time',\r\n                    content: [\r\n                        {\r\n                            tag: 'div',\r\n                            cls: 'finish-screen__time-sign',\r\n                            content: 'Затраченное время',\r\n                        },\r\n                        {\r\n                            tag: 'div',\r\n                            cls: 'finish-screen__time-timer',\r\n                            content: playedTime,\r\n                        },\r\n                    ],\r\n                },\r\n                {\r\n                    tag: 'button',\r\n                    cls: ['button', 'finish-screen-button'],\r\n                    content: 'Играть снова',\r\n                },\r\n            ],\r\n        },\r\n    });\r\n    document.body.appendChild(templateFinishScreen);\r\n    var startAgainButton = document.querySelector('.finish-screen-button');\r\n    if (startAgainButton === null)\r\n        throw new Error('не получилось поймать кнопку \"Начать игру заново\"');\r\n    startAgainButton.addEventListener('click', function () {\r\n        location.reload();\r\n        renderStartScreen();\r\n    });\r\n}\r\n","import templateEngine from './lib/templateEngine';\r\nimport renderStartScreen from './renderStartScreen';\r\nimport { gameEngine, startTimer, timerInterval } from './gameEngine';\r\nimport { createDeck, deckProps } from './initSetAndSupport';\r\nexport default function renderPlayScreen(event) {\r\n    event.preventDefault();\r\n    document.body.textContent = '';\r\n    var cards = [];\r\n    var deck = createDeck(deckProps.difficulty);\r\n    function shuffleDeckAndPushCard() {\r\n        var randomIndex = Math.floor(Math.random() * deck.length);\r\n        var randomCard = deck[randomIndex];\r\n        deck.splice(randomIndex, 1);\r\n        return randomCard;\r\n    }\r\n    for (var i = 0; i < deckProps.difficulty; i++) {\r\n        var randomCard = shuffleDeckAndPushCard();\r\n        cards.push({\r\n            tag: 'img',\r\n            cls: [\r\n                'play-field__card',\r\n                \"play-field__card_flipped-\".concat(randomCard[0], \"-\").concat(randomCard[1]),\r\n            ],\r\n            attrs: {\r\n                'data-suit': randomCard[0],\r\n                'data-rank': randomCard[1],\r\n            },\r\n        });\r\n    }\r\n    var templatePlayScreen = templateEngine({\r\n        tag: 'div',\r\n        cls: 'container',\r\n        content: [\r\n            {\r\n                tag: 'div',\r\n                cls: 'header',\r\n                content: [\r\n                    {\r\n                        tag: 'div',\r\n                        cls: 'header__clock',\r\n                        content: [\r\n                            {\r\n                                tag: 'div',\r\n                                cls: 'header__min-sec',\r\n                                content: [\r\n                                    {\r\n                                        tag: 'div',\r\n                                        cls: 'header__min',\r\n                                        content: 'min',\r\n                                    },\r\n                                    {\r\n                                        tag: 'div',\r\n                                        cls: 'header__sec',\r\n                                        content: 'sec',\r\n                                    },\r\n                                ],\r\n                            },\r\n                            {\r\n                                tag: 'div',\r\n                                cls: 'header__timer',\r\n                                content: \"0.00\",\r\n                            },\r\n                        ],\r\n                    },\r\n                    {\r\n                        tag: 'button',\r\n                        cls: 'button',\r\n                        content: 'Начать заново',\r\n                    },\r\n                ],\r\n            },\r\n            {\r\n                tag: 'div',\r\n                cls: 'play-field',\r\n                content: cards,\r\n            },\r\n        ],\r\n    });\r\n    document.body.appendChild(templatePlayScreen);\r\n    var startAgainButton = document.querySelector('.button');\r\n    if (startAgainButton === null)\r\n        throw new Error('кнопка \"начать заново\" не создалась');\r\n    startAgainButton.addEventListener('click', function () {\r\n        location.reload();\r\n        renderStartScreen();\r\n    });\r\n    var hideCards = function (card) {\r\n        var timeToHideCards = 2000;\r\n        setTimeout(function () {\r\n            card.removeAttribute('class');\r\n            card.classList.add('play-field__card_not-flipped');\r\n            card.classList.add('play-field__card');\r\n            var timerField = document.querySelector('.header__timer');\r\n            clearInterval(timerInterval);\r\n            startTimer(timerField);\r\n        }, timeToHideCards);\r\n    };\r\n    var cardElements = document.querySelectorAll('.play-field__card');\r\n    cardElements.forEach(hideCards);\r\n    var clickedCard = document.querySelector('.play-field');\r\n    if (clickedCard === null)\r\n        throw new Error('не получается выбрать карту по которой кликнули');\r\n    clickedCard.addEventListener('click', gameEngine);\r\n}\r\n","import templateEngine from './lib/templateEngine';\r\nimport renderPlayScreen from './renderPlayScreen';\r\nimport { cardsCountByDifficulty, deckProps } from './initSetAndSupport';\r\nexport default function renderStartScreen() {\r\n    var templateInitialScreen = templateEngine({\r\n        tag: 'div',\r\n        cls: 'start-screen',\r\n        content: {\r\n            tag: 'div',\r\n            cls: 'start-screen__block',\r\n            content: [\r\n                {\r\n                    tag: 'div',\r\n                    cls: 'start-screen__title',\r\n                    content: 'Выбери сложность',\r\n                },\r\n                {\r\n                    tag: 'div',\r\n                    cls: 'start-screen__difficulties',\r\n                    content: [\r\n                        {\r\n                            tag: 'div',\r\n                            cls: 'start-screen__difficulty',\r\n                            content: '1',\r\n                            attrs: { 'data-difficulty': 'easy' },\r\n                        },\r\n                        {\r\n                            tag: 'div',\r\n                            cls: 'start-screen__difficulty',\r\n                            content: '2',\r\n                            attrs: { 'data-difficulty': 'normal' },\r\n                        },\r\n                        {\r\n                            tag: 'div',\r\n                            cls: 'start-screen__difficulty',\r\n                            content: '3',\r\n                            attrs: { 'data-difficulty': 'hard' },\r\n                        },\r\n                    ],\r\n                },\r\n                {\r\n                    tag: 'button',\r\n                    cls: 'button',\r\n                    content: 'Старт',\r\n                },\r\n            ],\r\n        },\r\n    });\r\n    document.body.textContent = '';\r\n    document.body.appendChild(templateInitialScreen);\r\n    function setDifficulty(event) {\r\n        var target = event.target;\r\n        if (target === null)\r\n            throw new Error('не задана сложность игры');\r\n        if (!target.classList.contains('start-screen__difficulty'))\r\n            return;\r\n        if (difficultyButtons === null)\r\n            throw new Error('кнопки выбора сложности не создались');\r\n        for (var i = 0; i < difficultyButtons.children.length; i++) {\r\n            difficultyButtons.children[i].classList.remove('start-screen__difficulty_chosen');\r\n        }\r\n        target.classList.add('start-screen__difficulty_chosen');\r\n        var datasetDifficulty = target.dataset.difficulty;\r\n        if (datasetDifficulty === undefined)\r\n            throw new Error('что- то произошло с заданием сложности игры внутри HTML элемента');\r\n        if (datasetDifficulty in cardsCountByDifficulty) {\r\n            deckProps.difficulty =\r\n                cardsCountByDifficulty[datasetDifficulty];\r\n            return;\r\n        }\r\n        throw new Error('не найдена сложность игры');\r\n    }\r\n    var difficultyButtons = document.querySelector('.start-screen__difficulties');\r\n    var startButton = document.querySelector('.button');\r\n    if (difficultyButtons === null || startButton === null)\r\n        throw new Error('кнопки выбора сложности или кнопка старта не создались');\r\n    difficultyButtons.addEventListener('click', setDifficulty);\r\n    startButton.addEventListener('click', renderPlayScreen);\r\n}\r\n","export default function templateEngine(block) {\n  if (block === undefined || block === null || block === false) {\n    return document.createTextNode('')\n  }\n  if (\n    typeof block === 'string' ||\n    typeof block === 'number' ||\n    block === true\n  ) {\n    return document.createTextNode(block)\n  }\n  if (Array.isArray(block)) {\n    const fragment = document.createDocumentFragment()\n    block.forEach((item) => {\n      const elem = templateEngine(item)\n      fragment.appendChild(elem)\n    })\n    return fragment\n  }\n\n  const element = document.createElement(block.tag)\n\n  if (block.cls) {\n    element.classList.add(...[].concat(block.cls).filter(Boolean))\n  }\n\n  if (block.attrs) {\n    const keys = Object.keys(block.attrs)\n\n    keys.forEach((key) => {\n      element.setAttribute(key, block.attrs[key])\n    })\n  }\n\n  const content = templateEngine(block.content)\n\n  element.appendChild(content)\n\n  return element\n}\n\nconst container = document.querySelector('.app')\n\ncontainer.appendChild(templateEngine())\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import './style.css';\r\nimport renderStartScreen from './renderStartScreen';\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n    renderStartScreen();\r\n});\r\n"],"names":[],"sourceRoot":""}